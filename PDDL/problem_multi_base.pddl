(define (problem problem_multi_base) (:domain domain_multi_base) (:objects t0 t1 t2 t3 t4 t5 t6 t7 - trace_state s0 s1 s2 s3 s4 s5 s6 - automaton_state I S B A T - activity) (:init (= (total-cost) 0) (cur_state t0) (trace t0 A t1) (trace t1 S t2) (trace t2 T t3) (trace t3 A t4) (trace t4 B t5) (trace t5 I t6) (trace t6 B t7) (final_state t7) (cur_state s0) (automaton s1 A s2) (automaton s0 B s1) (automaton s0 S s1) (automaton s0 I s1) (automaton s0 A s1) (automaton s0 T s1) (automaton s1 B s1) (automaton s1 S s1) (automaton s1 I s1) (automaton s1 T s1) (automaton s2 B s2) (automaton s2 S s2) (automaton s2 I s2) (automaton s2 A s2) (automaton s2 T s2) (final_state s2) (cur_state s3) (automaton s4 B s5) (automaton s5 B s6) (automaton s3 I s4) (automaton s3 S s4) (automaton s3 B s4) (automaton s3 A s4) (automaton s3 T s4) (automaton s4 I s4) (automaton s4 S s4) (automaton s4 A s4) (automaton s4 T s4) (automaton s5 I s5) (automaton s5 S s5) (automaton s5 A s5) (automaton s5 T s5) (automaton s6 I s6) (automaton s6 S s6) (automaton s6 B s6) (automaton s6 A s6) (automaton s6 T s6) (final_state s4) (final_state s5) ) (:goal (forall (?s - state) (imply (cur_state ?s) (final_state ?s)))) (:metric minimize (total-cost)))