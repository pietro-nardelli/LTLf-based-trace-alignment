(define (problem problem_multi) (:domain domain_multi) (:objects t0 t1 t2 t3 t4 t5 - trace_state s2 s0 s1 - automaton_state s4 s3 s5 - automaton_state s a t i k l - activity) (:init (= (total-cost) 0) (cur_state t0) (trace t0 s t1) (trace t1 t t2) (trace t2 k t3) (trace t3 a t4) (trace t4 i t5) (final_state t5) (cur_state s0) (automaton s0 s s1) (automaton s0 a s1) (automaton s0 t s1) (automaton s0 i s1) (automaton s0 k s1) (automaton s1 s s1) (automaton s1 t s1) (automaton s1 i s1) (automaton s1 k s1) (automaton s1 a s2) (automaton s2 s s2) (automaton s2 a s2) (automaton s2 t s2) (automaton s2 i s2) (automaton s2 k s2) (final_state s2) (cur_state s3) (automaton s3 s s4) (automaton s3 a s4) (automaton s3 t s4) (automaton s3 i s4) (automaton s3 k s4) (automaton s3 l s4) (automaton s4 s s4) (automaton s4 a s4) (automaton s4 t s4) (automaton s4 i s4) (automaton s4 l s4) (automaton s4 k s5) (automaton s5 s s5) (automaton s5 a s5) (automaton s5 t s5) (automaton s5 i s5) (automaton s5 k s5) (automaton s5 l s4) (final_state s4) ) (:goal (forall (?s - state) (imply (cur_state ?s) (final_state ?s)))) (:metric minimize (total-cost)))