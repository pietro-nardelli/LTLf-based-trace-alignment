(define (problem problem_opt_10_4_1-50) (:domain domain_opt_10_4_1-50) (:objects t0 t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 - trace_state s1 s2 s3 s4 - automaton_state a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 - automaton_name I A E G L F B R N O D W V T H M S P Q K U J - activity) (:init (= (total-cost) 0) (cur_state a0 t0) (trace t0 A t1) (trace t1 G t2) (trace t2 U t3) (trace t3 D t4) (trace t4 W t5) (trace t5 N t6) (trace t6 D t7) (trace t7 E t8) (trace t8 V t9) (trace t9 H t10) (trace t10 D t11) (trace t11 S t12) (trace t12 H t13) (trace t13 F t14) (trace t14 R t15) (trace t15 O t16) (trace t16 O t17) (trace t17 M t18) (trace t18 V t19) (trace t19 E t20) (trace t20 H t21) (final_state a0 t21) (cur_state a1 s1) (automaton a1 s1 P s2) (automaton a1 s1 Q s3) (automaton a1 s2 I s1) (automaton a1 s2 A s1) (automaton a1 s2 E s1) (automaton a1 s2 G s1) (automaton a1 s2 X s1) (automaton a1 s2 F s1) (automaton a1 s2 B s1) (automaton a1 s2 R s1) (automaton a1 s2 O s1) (automaton a1 s2 D s1) (automaton a1 s2 W s1) (automaton a1 s2 V s1) (automaton a1 s2 T s1) (automaton a1 s2 H s1) (automaton a1 s2 C s1) (automaton a1 s2 M s1) (automaton a1 s2 Q s1) (automaton a1 s2 K s1) (automaton a1 s2 U s1) (automaton a1 s2 Y s1) (automaton a1 s2 L s1) (automaton a1 s2 N s1) (automaton a1 s2 J s1) (automaton a1 s2 S s1) (final_state a1 s1) (final_state a1 s2) (cur_state a2 s1) (automaton a2 s1 A s2) (final_state a2 s2) (cur_state a3 s1) (automaton a3 s1 J s3) (final_state a3 s1) (final_state a3 s2) (cur_state a4 s1) (automaton a4 s1 E s3) (automaton a4 s3 F s2) (final_state a4 s1) (final_state a4 s2) (cur_state a5 s1) (automaton a5 s1 N s2) (automaton a5 s2 O s1) (automaton a5 s2 I s3) (automaton a5 s2 A s3) (automaton a5 s2 E s3) (automaton a5 s2 G s3) (automaton a5 s2 X s3) (automaton a5 s2 F s3) (automaton a5 s2 B s3) (automaton a5 s2 R s3) (automaton a5 s2 D s3) (automaton a5 s2 W s3) (automaton a5 s2 V s3) (automaton a5 s2 T s3) (automaton a5 s2 H s3) (automaton a5 s2 C s3) (automaton a5 s2 M s3) (automaton a5 s2 K s3) (automaton a5 s2 U s3) (automaton a5 s2 Y s3) (automaton a5 s2 L s3) (automaton a5 s2 P s3) (automaton a5 s2 J s3) (automaton a5 s2 S s3) (automaton a5 s2 Q s3) (final_state a5 s1) (cur_state a6 s1) (automaton a6 s1 T s2) (automaton a6 s1 S s3) (automaton a6 s2 S s4) (automaton a6 s3 T s4) (final_state a6 s1) (final_state a6 s2) (final_state a6 s3) (cur_state a7 s1) (automaton a7 s1 T s2) (automaton a7 s2 U s3) (final_state a7 s1) (final_state a7 s2) (cur_state a8 s1) (automaton a8 s1 V s3) (automaton a8 s1 I s2) (automaton a8 s1 A s2) (automaton a8 s1 E s2) (automaton a8 s1 G s2) (automaton a8 s1 X s2) (automaton a8 s1 F s2) (automaton a8 s1 B s2) (automaton a8 s1 R s2) (automaton a8 s1 O s2) (automaton a8 s1 D s2) (automaton a8 s1 W s2) (automaton a8 s1 T s2) (automaton a8 s1 H s2) (automaton a8 s1 C s2) (automaton a8 s1 M s2) (automaton a8 s1 K s2) (automaton a8 s1 U s2) (automaton a8 s2 I s4) (automaton a8 s2 A s4) (automaton a8 s2 E s4) (automaton a8 s2 G s4) (automaton a8 s2 X s4) (automaton a8 s2 F s4) (automaton a8 s2 B s4) (automaton a8 s2 R s4) (automaton a8 s2 O s4) (automaton a8 s2 D s4) (automaton a8 s2 T s4) (automaton a8 s2 H s4) (automaton a8 s2 C s4) (automaton a8 s2 M s4) (automaton a8 s2 K s4) (automaton a8 s2 U s4) (automaton a8 s3 I s2) (automaton a8 s3 A s2) (automaton a8 s3 E s2) (automaton a8 s3 G s2) (automaton a8 s3 X s2) (automaton a8 s3 F s2) (automaton a8 s3 B s2) (automaton a8 s3 R s2) (automaton a8 s3 O s2) (automaton a8 s3 D s2) (automaton a8 s3 T s2) (automaton a8 s3 H s2) (automaton a8 s3 C s2) (automaton a8 s3 M s2) (automaton a8 s3 K s2) (automaton a8 s3 U s2) (automaton a8 s1 Y s2) (automaton a8 s1 L s2) (automaton a8 s1 N s2) (automaton a8 s1 P s2) (automaton a8 s1 J s2) (automaton a8 s2 Y s4) (automaton a8 s2 L s4) (automaton a8 s2 N s4) (automaton a8 s2 P s4) (automaton a8 s2 J s4) (automaton a8 s3 Y s2) (automaton a8 s3 L s2) (automaton a8 s3 N s2) (automaton a8 s3 P s2) (automaton a8 s3 J s2) (automaton a8 s1 S s2) (automaton a8 s2 S s4) (automaton a8 s3 S s2) (automaton a8 s1 Q s2) (automaton a8 s2 Q s4) (automaton a8 s3 Q s2) (final_state a8 s1) (final_state a8 s3) (cur_state a9 s1) (automaton a9 s1 K s2) (automaton a9 s2 L s1) (final_state a9 s1) (cur_state a10 s1) (automaton a10 s1 B s2) (automaton a10 s2 B s3) (final_state a10 s1) (final_state a10 s2) ) (:goal (forall (?a - automaton_name ?s - state) (imply (cur_state ?a ?s) (final_state ?a ?s)))) (:metric minimize (total-cost)))